apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlinx-atomicfu'
apply plugin: 'dagger.hilt.android.plugin'

apply from: "$rootDir/jacoco.gradle"

android {
    namespace 'dev.andrewbailey.music'
    compileSdkVersion libs.versions.sdk.compile.get().toInteger()

    defaultConfig {
        applicationId "dev.andrewbailey.music"
        minSdkVersion libs.versions.sdk.min.jockey.get().toInteger()
        targetSdkVersion libs.versions.sdk.target.get().toInteger()
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            applicationIdSuffix '.debug'
            versionNameSuffix ' (debug)'
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ['-Xjvm-default=enable']
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':encore:mediastore')
    implementation project(':encore:player')
    implementation project(':encore:mediaresumption')

    // Kotlin
    implementation libs.kotlin.stdlib
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.atomicfu.runtime

    // Androidx
    implementation libs.androidx.core
    implementation libs.androidx.annotation
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.palette

    // Compose
    implementation libs.compose.ui
    implementation libs.compose.foundation
    implementation libs.compose.material
    implementation libs.compose.animation
    implementation libs.compose.runtime
    implementation libs.compose.activity
    implementation libs.accompanist.systemui
    implementation libs.coil.core
    implementation libs.coil.compose

    // Dagger
    implementation libs.hilt.runtime
    kapt libs.hilt.compiler

    // Testing
    testImplementation libs.test.junit
    androidTestImplementation libs.test.espresso.core
}
