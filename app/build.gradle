apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'

def config = rootProject.extensions.getByName("ext")

android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId "dev.andrewbailey.music"
        minSdkVersion config.jockeyMinSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerVersion config.versions.kotlin.stdlib
        kotlinCompilerExtensionVersion config.versions.androidx.compose
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        freeCompilerArgs += ["-Xallow-jvm-ir-dependencies", "-Xskip-prerelease-check"]
        jvmTarget = "1.8"
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':encore-mediastore')
    implementation project(':encore-player')

    // Kotlin
    implementation config.deps.kotlin.stdlib
    implementation config.deps.kotlin.coroutines

    // Androidx
    implementation config.deps.androidx.core
    implementation config.deps.androidx.annotation
    implementation config.deps.androidx.appcompat
    implementation config.deps.androidx.fragment
    implementation config.deps.androidx.lifecycle
    implementation config.deps.androidx.viewmodel
    implementation config.deps.androidx.livedata
    implementation config.deps.androidx.savedstate

    // Compose
    implementation config.deps.compose.ui
    implementation config.deps.compose.foundation
    implementation config.deps.compose.material
    implementation config.deps.compose.animation
    implementation config.deps.compose.runtime
    implementation config.deps.compose.livedata

    // Dagger
    implementation config.deps.dagger.core
    implementation config.deps.dagger.hilt
    implementation config.deps.androidx.hiltViewModel
    kapt config.deps.dagger.compiler
    kapt config.deps.dagger.hiltCompiler
    kapt config.deps.androidx.hiltCompiler

    // Testing
    testImplementation config.deps.test.junit
    androidTestImplementation config.deps.test.espresso
}
