apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: dev.andrewbailey.ExplicitApiModePlugin

android {
    namespace 'dev.andrewbailey.encore.mediaresumption'
    compileSdkVersion libs.versions.sdk.compile.get().toInteger()

    defaultConfig {
        minSdkVersion libs.versions.sdk.min.encore.get().toInteger()
        targetSdkVersion libs.versions.sdk.target.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        buildConfigField "String", "VERSION_NAME", "\"${libs.versions.encore.get()}\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [ 'room.schemaLocation': "$projectDir/schemas".toString() ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':encore:core')
    api project(':encore:player')

    // Kotlin
    implementation libs.kotlin.stdlib
    implementation libs.kotlinx.coroutines.core

    // Room
    implementation libs.androidx.room.runtime
    kapt libs.androidx.room.compiler

    // Testing
    testImplementation project(':encore:test')
    testImplementation libs.test.junit
    testImplementation libs.test.kotlin.core
    testImplementation libs.test.kotlin.junit
    testImplementation libs.test.coroutines
    androidTestImplementation libs.test.espresso.core
}
