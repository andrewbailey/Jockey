apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlinx-atomicfu'
apply plugin: dev.andrewbailey.ExplicitApiModePlugin

apply from: "$rootDir/jacoco.gradle"

android {
    namespace 'dev.andrewbailey.encore.player'
    compileSdkVersion libs.versions.sdk.compile.get().toInteger()

    defaultConfig {
        minSdkVersion libs.versions.sdk.min.encore.get().toInteger()
        targetSdkVersion libs.versions.sdk.target.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        buildConfigField "String", "VERSION_NAME", "\"${libs.versions.encore.get()}\""
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':encore:core')
    implementation project(':misc:ipc')
    implementation project(':misc:compose-annotations')

    // Kotlin
    implementation libs.kotlin.stdlib
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.atomicfu.runtime

    // Androidx
    implementation libs.androidx.core
    implementation libs.androidx.annotation
    api libs.androidx.media

    // ExoPlayer
    implementation libs.exoplayer.core
    implementation libs.exoplayer.mediasession

    // Difference
    implementation libs.difference

    // Testing
    // Needed because the test services has to live in the `debug` source set
    debugImplementation project(':encore:test')
    testImplementation project(':encore:test')
    androidTestImplementation project(':encore:test')
    testImplementation libs.test.junit
    testImplementation libs.test.truth
    testImplementation libs.test.kotlin.core
    testImplementation libs.test.kotlin.junit
    testImplementation libs.test.coroutines
    androidTestImplementation libs.test.coroutines
    androidTestImplementation libs.kotlinx.coroutines.android
    androidTestImplementation libs.test.espresso.core
    androidTestImplementation libs.test.mockk.android
    androidTestImplementation libs.test.truth
    androidTestImplementation libs.test.turbine

    // Allow IdlingResources to be defined in debuggable builds
    debugImplementation libs.test.espresso.idling
}
